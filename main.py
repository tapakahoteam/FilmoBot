import logging
from aiogram import executor
from Settings import settings

import Handlers

async def on_startup(x):
    logging.info('Bot started')

async def on_shutdown(x):
    logging.info('Bot finished')

if __name__ == '__main__':
    executor.start_polling(settings.dp, skip_updates=True, on_startup=on_startup, on_shutdown=on_shutdown)
    logging.info('Script finished\n')
    

# –ù–µ –∑–Ω–∞—é –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—â–∞–Ω–∏–µ, –∏–ª–∏ —á—Ç–æ-—Ç–æ —Ç–∏–ø–æ —Ç–æ–≥–æ   
# –ü—Ä–æ–∫–æ–º–º–µ–Ω–∏—Ç—Ä—É–π —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–µ—à—å –Ω—É–∂–Ω—ã–º, –º–æ–∂–µ—Ç —á—Ç–æ-—Ç–æ –ª–∏—à–Ω–µ–µ, –∏–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç. 
# –ò–ª–∏ —á—Ç–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –º–æ–∂–µ—Ç –Ω–∞–¥–æ, –º–æ–∂–µ—Ç —Ç–æ, —á—Ç–æ —è –Ω–∞–ø–∏—Å–∞–ª –º–æ–∂–Ω–æ –ª–µ–≥—á–µ –∏ –º–µ–Ω—å—à–µ —Å–¥–µ–ª–∞—Ç—å. –ù—É —Ç—ã –ø–æ–Ω—è–ª –≤–æ–æ–±—â–µ–º)
import telebot
import config
import random
from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º üé≤')
	item2 = types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Å–µ—Ä–∏–∞–ª üé≤')
	markup.add(item1, item2)
	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ª—é–±–æ–π —Ñ–∏–ª—å–º üòé".format(message.from_user, bot.get_me()),
		parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def repeat(message):
	if message.chat.type == 'private':
		if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º üé≤':
			bot.send_message(message.chat.id, str(random.randint(0,100)))
		elif message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Å–µ—Ä–∏–∞–ª üé≤':
			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", callback_data='fantastic')
			item2 = types.InlineKeyboardButton("–ö–æ–º–µ–¥–∏—è", callback_data='comedy')
			item3 = types.InlineKeyboardButton("–ù–∞—É—á–Ω—ã–π", callback_data='science')
			markup.add(item1, item2, item3)
			bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –Ω–∞–π–¥—É!', reply_markup=markup)
		else:
			bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'fantastic':
				bot.send_message(call.message.chat.id, '–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–µ –≤ –∫–æ—Å–º–æ—Å–µ')
			elif call.data == 'comedy':
				bot.send_message(call.message.chat.id, '–ö–∞–∫ —è –≤—Å—Ç—Ä–µ—Ç–∏–ª –≤–∞—à—É –º–∞–º—É')
			elif call.data == 'science':
			    bot.send_message(call.message.chat.id, '–°–∫–≤–æ–∑—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏ –≤—Ä–µ–º—è —Å –ú–æ—Ä–≥–∞–Ω–æ–º –§—Ä–∏–º–µ–Ω–æ–º')
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º?",
				reply_markup=None)
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
				text="–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!")
	except Exception as e:
		print(repr(e))

bot.polling(none_stop=True)
